apply plugin: "com.android.application"

apply plugin: "kotlin-android"

apply plugin: "kotlin-android-extensions"

def hostBuildDir = projectDir.absolutePath + "/.externalNativeBuild/cmake/debug/host"
def cpuThreads = Runtime.runtime.availableProcessors()

tasks.withType(Test) {
    systemProperty "java.library.path", hostBuildDir
}

task createHostBuildDir() {
    def dir = new File(hostBuildDir)
    if (!dir.exists()) {
        dir.mkdirs()
    }
}

task runCMake(type: Exec) {
    dependsOn createHostBuildDir
    workingDir hostBuildDir
    commandLine "cmake"
    args "../../../../"
}

task runMake(type: Exec) {
    dependsOn runCMake
    workingDir hostBuildDir
    commandLine "make"
    // use all available cores for building
    args "-j$cpuThreads"
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.magiruuvelvet.otpgen"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                // enable C++17, rtti and exceptions to use libotpgen in all its glory
                cppFlags "-std=c++1z -frtti -fexceptions"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            // FIXME: figure out how to ">=" instead of hardcoding the exact version code :thinking:
            // replace with your CMake version, but must be >= 3.8
            version "3.12.2"
        }
    }
}

// code which is executed after the project was evaluated
project.afterEvaluate {

    // native library and the Swig package MUST be built/generated before any Java code is compiled
    javaPreCompileDebug.dependsOn externalNativeBuildDebug
    javaPreCompileRelease.dependsOn externalNativeBuildRelease

    // native library and the Swig package MUST be built/generated before any Kotlin code is compiled
    compileDebugKotlin.dependsOn externalNativeBuildDebug
    compileReleaseKotlin.dependsOn externalNativeBuildRelease

    // build the native library for the host system (host tests)
    if (org.gradle.internal.os.OperatingSystem.current().isUnix() ||
        org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        javaPreCompileDebugAndroidTest.dependsOn runMake
    }
}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:28.0.0-rc02"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.android.support:design:28.0.0-rc02"
    implementation 'com.android.support:support-v4:28.0.0-rc02'
    testImplementation "junit:junit:4.12"
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"
}
